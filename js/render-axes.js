const mainAxisText="главная ось",crossAxisText="поперечная ось",mainAxisClass="axis--main",crossAxisClass="axis--cross",rowReverseClass="axis--row-reverse",columnReverseClass="axis--column-reverse",axesElements=document.querySelectorAll(".axis"),renameAxes=()=>{axesElements.forEach((s=>{const e=s.querySelector(".axis__text");s.classList.contains("axis--main")&&(e.textContent=mainAxisText),s.classList.contains("axis--cross")&&(e.textContent=crossAxisText)}))},addCssAxes=(s,e)=>{axesElements.forEach((a=>{a.classList.contains("axis--horizontal")?a.classList.add(...s):a.classList.add(...e)})),renameAxes()},removeCssAxes=(s,e)=>{axesElements.forEach((a=>{a.classList.contains("axis--horizontal")?a.classList.remove(...s):a.classList.remove(...e)})),renameAxes()},renderAxes=({parent:{"flex-direction":s}})=>{switch(s){case"row":addCssAxes(["axis--main"],["axis--cross"]),removeCssAxes([rowReverseClass,"axis--cross"],[columnReverseClass,"axis--main"]);break;case"row-reverse":addCssAxes([rowReverseClass,"axis--main"],["axis--cross"]),removeCssAxes(["axis--cross"],[columnReverseClass,"axis--main"]);break;case"column":addCssAxes(["axis--cross"],["axis--main"]),removeCssAxes([rowReverseClass,"axis--main"],[columnReverseClass,"axis--cross"]);break;case"column-reverse":addCssAxes(["axis--cross"],[columnReverseClass,"axis--main"]),removeCssAxes([columnReverseClass,"axis--main"],["axis--cross"])}};export{renderAxes};